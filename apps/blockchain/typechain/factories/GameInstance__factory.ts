/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GameInstance, GameInstanceInterface } from "../GameInstance";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gamitAuth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_auditor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "RngReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "RngRequested",
    type: "event",
  },
  {
    inputs: [],
    name: "getJackpot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "play",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rng",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "receiveRng",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600455600160055560006007553480156200002057600080fd5b5060405162000fa338038062000fa3833981810160405281019062000046919062000203565b828282826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505033600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200025f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001cb826200019e565b9050919050565b620001dd81620001be565b8114620001e957600080fd5b50565b600081519050620001fd81620001d2565b92915050565b6000806000606084860312156200021f576200021e62000199565b5b60006200022f86828701620001ec565b93505060206200024286828701620001ec565b92505060406200025586828701620001ec565b9150509250925092565b610d34806200026f6000396000f3fe6080604052600436106100345760003560e01c80639329066c1461003957806393e84cd914610064578063baa17a7e1461006e575b600080fd5b34801561004557600080fd5b5061004e6100ab565b60405161005b9190610718565b60405180910390f35b61006c6100b5565b005b34801561007a57600080fd5b506100956004803603810190610090919061076e565b61011a565b6040516100a29190610718565b60405180910390f35b6000600754905090565b600134146100c257600080fd5b6100db670d2f13f7789f000066b1a2bc2ec50000610314565b50670d2f13f7789f0000600760008282546100f691906107dd565b92505081905550670de0b6b3a76400006007541115610118576101176103d8565b5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c28af974336040518263ffffffff1660e01b81526004016101779190610874565b602060405180830381865afa158015610194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b891906108c7565b6101f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ee90610977565b60405180910390fd5b816006541461023b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610232906109e3565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663333f86b684846040518363ffffffff1660e01b8152600401610298929190610a03565b600060405180830381600087803b1580156102b257600080fd5b505af11580156102c6573d6000803e3d6000fd5b505050507fc1f52e85c91c92266e3a8dd9b15249612d255356a8d8ff5e087b0d1514073032836040516102f99190610718565b60405180910390a161030b8383610420565b82905092915050565b6000826004600082825461032891906107dd565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663072e536b84846040518363ffffffff1660e01b815260040161038a929190610a03565b6020604051808303816000875af11580156103a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cd91906108c7565b506001905092915050565b6104166040518060400160405280600e81526020017f67657474696e672063616c6c6564000000000000000000000000000000000000815250610424565b61041e6104bd565b565b5050565b6104ba816040516024016104389190610ab4565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106d6565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635685a8bd6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561052557600080fd5b505af1158015610539573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c58343ef60016040518263ffffffff1660e01b81526004016105999190610b1b565b6060604051808303816000875af11580156105b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dc9190610c5b565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8a3139f6005546040518263ffffffff1660e01b815260040161063a9190610718565b6020604051808303816000875af1158015610659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067d9190610c88565b6006819055507fcfc6d4c55ea69e97516c76e3ecb1190fbdf06b66670687b3c278e2bbfcc27d016006546040516106b49190610718565b60405180910390a1600560008154809291906106cf90610cb5565b9190505550565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000819050919050565b610712816106ff565b82525050565b600060208201905061072d6000830184610709565b92915050565b6000604051905090565b600080fd5b61074b816106ff565b811461075657600080fd5b50565b60008135905061076881610742565b92915050565b600080604083850312156107855761078461073d565b5b600061079385828601610759565b92505060206107a485828601610759565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107e8826106ff565b91506107f3836106ff565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610828576108276107ae565b5b828201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061085e82610833565b9050919050565b61086e81610853565b82525050565b60006020820190506108896000830184610865565b92915050565b60008115159050919050565b6108a48161088f565b81146108af57600080fd5b50565b6000815190506108c18161089b565b92915050565b6000602082840312156108dd576108dc61073d565b5b60006108eb848285016108b2565b91505092915050565b600082825260208201905092915050565b7f4f6e6c792074686520726e67206f7261636c652063616e2070726f766964652060008201527f524e470000000000000000000000000000000000000000000000000000000000602082015250565b60006109616023836108f4565b915061096c82610905565b604082019050919050565b6000602082019050818103600083015261099081610954565b9050919050565b7f496e76616c696420726571756573742069640000000000000000000000000000600082015250565b60006109cd6012836108f4565b91506109d882610997565b602082019050919050565b600060208201905081810360008301526109fc816109c0565b9050919050565b6000604082019050610a186000830185610709565b610a256020830184610709565b9392505050565b600081519050919050565b60005b83811015610a55578082015181840152602081019050610a3a565b83811115610a64576000848401525b50505050565b6000601f19601f8301169050919050565b6000610a8682610a2c565b610a9081856108f4565b9350610aa0818560208601610a37565b610aa981610a6a565b840191505092915050565b60006020820190508181036000830152610ace8184610a7b565b905092915050565b6000819050919050565b6000819050919050565b6000610b05610b00610afb84610ad6565b610ae0565b6106ff565b9050919050565b610b1581610aea565b82525050565b6000602082019050610b306000830184610b0c565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b7382610a6a565b810181811067ffffffffffffffff82111715610b9257610b91610b3b565b5b80604052505050565b6000610ba5610733565b9050610bb18282610b6a565b919050565b610bbf81610853565b8114610bca57600080fd5b50565b600081519050610bdc81610bb6565b92915050565b600081519050610bf181610742565b92915050565b600060608284031215610c0d57610c0c610b36565b5b610c176060610b9b565b90506000610c2784828501610bcd565b6000830152506020610c3b84828501610be2565b6020830152506040610c4f84828501610be2565b60408301525092915050565b600060608284031215610c7157610c7061073d565b5b6000610c7f84828501610bf7565b91505092915050565b600060208284031215610c9e57610c9d61073d565b5b6000610cac84828501610be2565b91505092915050565b6000610cc0826106ff565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cf357610cf26107ae565b5b60018201905091905056fea2646970667358221220d311c881215a85a87dbb3de4aedd12e74e003a91816f4342013ce7518d60aeac64736f6c634300080a0033";

type GameInstanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameInstanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameInstance__factory extends ContractFactory {
  constructor(...args: GameInstanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GameInstance";
  }

  deploy(
    _treasury: string,
    _gamitAuth: string,
    _auditor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GameInstance> {
    return super.deploy(
      _treasury,
      _gamitAuth,
      _auditor,
      overrides || {}
    ) as Promise<GameInstance>;
  }
  getDeployTransaction(
    _treasury: string,
    _gamitAuth: string,
    _auditor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _treasury,
      _gamitAuth,
      _auditor,
      overrides || {}
    );
  }
  attach(address: string): GameInstance {
    return super.attach(address) as GameInstance;
  }
  connect(signer: Signer): GameInstance__factory {
    return super.connect(signer) as GameInstance__factory;
  }
  static readonly contractName: "GameInstance";
  public readonly contractName: "GameInstance";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameInstanceInterface {
    return new utils.Interface(_abi) as GameInstanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameInstance {
    return new Contract(address, _abi, signerOrProvider) as GameInstance;
  }
}
